{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: [],\n      id: 0,\n      name: '',\n      email: '',\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    });\n\n    _defineProperty(this, \"getDataFromDb\", () => {\n      fetch('http://localhost:3000/api/users.js') // fetch('/api/getData')\n      .then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    });\n\n    _defineProperty(this, \"putDataToDB\", () => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post('http://localhost:3000/api/putData', {\n        name: this.state.name,\n        email: this.state.email\n      }).then(res => {//on success\n      }).catch(error => {//on error\n      });\n    });\n  }\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  } // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  } // just a note, here, in the front end, we use the id key of our data object\n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify\n  // data base entries\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n\n\n  // render page\n  render() {\n    const {\n      data\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"jsx-183188917\"\n    }, data.length <= 0 ? 'NO DB ENTRIES YET' : data.map(dat => console.log(dat.id, dat.name, dat.email)), __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"container-account\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"container\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"col-md-12\"\n    }, __jsx(\"h1\", {\n      className: \"jsx-183188917\" + \" \" + \"text-center\"\n    }, \"Register\")))), __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"container\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"col-md-10 m-auto\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"form-group\"\n    }, __jsx(\"form\", {\n      action: \"/register\",\n      method: \"POST\",\n      className: \"jsx-183188917\" + \" \" + \"form-container\"\n    }, __jsx(\"label\", {\n      for: \"name\",\n      className: \"jsx-183188917\"\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      className: \"jsx-183188917\" + \" \" + \"form-control animated fadeIn\"\n    }), __jsx(\"label\", {\n      for: \"email\",\n      className: \"jsx-183188917\"\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      className: \"jsx-183188917\" + \" \" + \"form-control animated fadeIn\"\n    }), __jsx(\"label\", {\n      for: \"password\",\n      className: \"jsx-183188917\"\n    }, \"Password\"), __jsx(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      className: \"jsx-183188917\" + \" \" + \"form-control animated fadeIn\"\n    })), __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"modal-margins\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-183188917\" + \" \" + \"col-md-8 m-auto\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      onClick: () => this.putDataToDB(this.state),\n      className: \"jsx-183188917\" + \" \" + \"btn btn-primary btn-block\"\n    }, \"Register\")))), __jsx(\"p\", {\n      className: \"jsx-183188917\" + \" \" + \"lead mt-4\"\n    }, \"Have An Account?\", \" \", __jsx(\"a\", {\n      href: \"/users/login\",\n      className: \"jsx-183188917\" + \" \" + \"register\"\n    }, \"Login\"))))))), __jsx(_JSXStyle, {\n      id: \"183188917\"\n    }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/schwarz/card/components/Register.js */\"));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/schwarz/card/components/Register.js"],"names":["React","axios","Register","Component","data","id","name","email","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","fetch","then","json","res","setState","currentIds","state","map","idToBeAdded","includes","post","catch","error","componentDidMount","getDataFromDb","interval","setInterval","componentWillUnmount","clearInterval","render","length","dat","console","log","e","target","value","putDataToDB"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\nclass Register extends React.Component {\n\n        // initialize our state\n        state = {\n          data: [],\n          id: 0,\n          name: '',\n          email: '',\n          intervalIsSet: false,\n          idToDelete: null,\n          idToUpdate: null,\n          objectToUpdate: null,\n        };\n      \n        // when component mounts, first thing it does is fetch all existing data in our db\n        // then we incorporate a polling logic so that we can easily see if our db has\n        // changed and implement those changes into our UI\n        componentDidMount() {\n          this.getDataFromDb();\n          if (!this.state.intervalIsSet) {\n            let interval = setInterval(this.getDataFromDb, 1000);\n            this.setState({ intervalIsSet: interval });\n          }\n        }\n      \n        // never let a process live forever\n        // always kill a process everytime we are done using it\n        componentWillUnmount() {\n          if (this.state.intervalIsSet) {\n            clearInterval(this.state.intervalIsSet);\n            this.setState({ intervalIsSet: null });\n          }\n        }\n      \n        // just a note, here, in the front end, we use the id key of our data object\n        // in order to identify which we want to Update or delete.\n        // for our back end, we use the object id assigned by MongoDB to modify\n        // data base entries\n      \n        // our first get method that uses our backend api to\n        // fetch data from our data base\n        getDataFromDb = () => {\n          fetch('http://localhost:3000/api/users.js')\n          // fetch('/api/getData')\n            .then((data) => data.json())\n            .then((res) => this.setState({ data: res.data }));\n        };\n      \n        // our put method that uses our backend api\n        // to create new query into our data base\n        putDataToDB = () => {\n          let currentIds = this.state.data.map((data) => data.id);\n          let idToBeAdded = 0;\n          while (currentIds.includes(idToBeAdded)) {\n            ++idToBeAdded;\n          }\n      \n      \n          axios.post('http://localhost:3000/api/putData',{\n            name:this.state.name,\n            email:this.state.email\n          \n          }).then((res)=>{\n            //on success\n            }).catch((error)=>{\n            //on error\n          });\n      \n        }\n      \n        \n      \n      \n        // render page\n      \n        render() {\n          const { data } = this.state;\n          return (\n            <div>\n             \n                {data.length <= 0\n                  ? 'NO DB ENTRIES YET'\n                  : data.map((dat) => (\n                      console.log(dat.id, dat.name, dat.email )\n                    ))}\n                \n              \n      \n      \n              <div className=\"container-account\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <h1 className=\"text-center\">Register</h1>\n                    </div>\n                  </div>\n                </div>\n      \n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-10 m-auto\">\n                      <div className=\"form-group\">\n                        <form className=\"form-container\" action=\"/register\" method=\"POST\">\n                          <label for=\"name\">Name</label>\n                          \n                          <input\n                          type=\"text\"\n                          name=\"name\"\n                          className=\"form-control animated fadeIn\"\n                          onChange={(e) => this.setState({ name: e.target.value })}\n                  \n                          />\n      \n                          <label for=\"email\">Email</label>\n      \n                          <input\n                          type=\"email\"\n                          name=\"email\"\n                          className=\"form-control animated fadeIn\"\n                          onChange={(e) => this.setState({ email: e.target.value })}\n                  \n                          />\n                          \n      \n                          <label for=\"password\">Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            className=\"form-control animated fadeIn\"\n                          />\n                        </form>\n      \n                        <div className=\"modal-margins\">\n                          <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n      \n                            <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block\"\n                            onClick={() => this.putDataToDB(this.state)}>\n                            Register\n                            </button>\n      \n                            </div>\n                          </div>\n                        </div>\n      \n                        <p className=\"lead mt-4\">\n                          Have An Account?{\" \"}\n                          <a className=\"register\" href=\"/users/login\">\n                            Login\n                          </a>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <style jsx>{`\n\n              `}</style>\n\n            </div>\n          );\n        }\n      }\n      \n\nexport default Register"]},"metadata":{},"sourceType":"module"}